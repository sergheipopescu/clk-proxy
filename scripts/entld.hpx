#!/bin/bash

###
## Variables
###

# set -a										# export all variables

cln=$(echo -en '\033[0m')
red=$(echo -en '\033[0;31m')
grn=$(echo -en '\033[32m')
ylw=$(echo -en '\033[33m')
#cyn=$(echo -en '\033[36m')
bred=$(echo -en '\033[1;91m')

domap=/etc/haproxy/remotedomains.map
domfile=/etc/haproxy/localdomains.file
hpxcfg=/etc/haproxy/haproxy.cfg

help () {

	echo
	echo -e "entld.hpx usage: \n\n-r for remote proxy; \n-l <fqdn.example.org> for local proxy; \n-h displays this help"
	echo
}



###
## Script
###


while getopts ":l:hr" flag; do

	case "${flag}" in

	r)	echo
		read -r -p "Enter domain name [fqdn]: " fqdn
		read -r -p "Enter remote server [IP/fqdn]: " remdn
		read -r -p "Enter remote port [integer]: " rempt
		read -r -n 1 -p "Enable proxy protocol [y/N]: " pxy

		sdn="${remdn%%.*}"									# strip domain name from fqdn

		if [[ $pxy =~ ^[Yy] ]]; then								# proxy protocol enabled/disabled variable

			pxy="send-proxy-v2-ssl\n\n"
		else

			pxy="\n\n"
		fi

		echo
		echo
		read -p  $"     Enable HAProxy for ${grn}$fqdn${cln} routed to backend ${grn}$remdn${cln}?  > " -r -n 1



		if [[ $REPLY =~ ^[Yy] ]]; then

		# Check for fqdn map #
			if ! grep -q "$fqdn" $domap; then

				echo -e "$fqdn       	$remdn\n" | tee -a $domap >/dev/null
				echo -e "\n\n\nDomain map ${grn}created${cln}\n"

			else
				echo -e "\n\n\nDomain map ${ylw}exists${cln}\n\nBackend ${red}NOT${cln} created\n"
				exit 0
			fi

		# Check for backend #
			if ! grep -q "backend $remdn" $hpxcfg; then	


				echo -e "\nbackend $remdn\n     server $sdn $remdn:$rempt check sni req.ssl_sni $pxy" | tee -a $hpxcfg >/dev/null
				echo -e "Backend ${grn}created${cln}\n"

			else
				echo -e "Backend ${ylw}exists${cln}\n"
			fi

		fi
	;;

	l)	if [[ "$OPTARG" == "" ]]; then

			read -p -r "Enter fqdn: " fqdn
			echo -e "$fqdn" | tee -a $domfile >/dev/null

		else

			if grep -q "$OPTARG" $domfile; then

					echo -e "Domain map $fqdn ${ylw}exists${cln}\n"
					exit 1

			fi

			echo -e "$OPTARG" | tee -a $domfile >/dev/null

		fi
	;;

	h)	help
	;;

	:)	help
	;;

	*) 	echo -e "\n ${bred} Error! Invalid option${cln}${red} -$OPTARG${cln} \n"
		exit
	;;
	esac

done

systemctl reload haproxy


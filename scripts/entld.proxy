#!/bin/bash

###
## Variables
###

# set -a										# export all variables

domap=/etc/haproxy/remotedomains.map
domfile=/etc/haproxy/localdomains.file
hpxcfg=/etc/haproxy/haproxy.cfg

help () {

	echo
	echo -e "entld.proxy usage: \n\n-r for remote proxy; \n-l <fqdn.example.org> for local proxy; \n-h displays this help"
	echo
}
###
## Script
###


while getopts ":l:hr" flag; do

	case "${flag}" in

	r)	echo
		read -r -p "Enter domain name [fqdn]: " fqdn
		read -r -p "Enter remote server [IP/fqdn]: " remdn
		read -r -p "Enter remote port [integer]: " rempt
		read -r -n 1 -p "Enable proxy protocol [y/N]: " pxy

		sdn="${remdn%%.*}"									# strip domain name from fqdn

		if [[ $pxy =~ ^[Yy] ]]; then								# proxy protocol enabled/disabled variable

			pxy="send-proxy-v2-ssl\n\n"
		else

			pxy="\n\n"
		fi

		echo
		echo
		read -p  $"     Enable HAProxy for $fqdn routed to backend $remdn?  > " -r -n 1



		if [[ $REPLY =~ ^[Yy] ]]; then

		# Check for backend #
			if ! grep -q "backend $remdn" $hpxcfg; then	


				echo -e "\nbackend $remdn\n     server $sdn $remdn:$rempt check sni req.ssl_sni $pxy" | tee -a $hpxcfg >/dev/null
				echo
				echo -e "\nBackend created"

			else
				echo
				echo -e "\nBackend exists"
			fi


		# Check for fqdn map #
			if ! grep -q $fqdn $domap; then

				echo -e "$fqdn        $remdn\n" | tee -a $domap >/dev/null
				echo -e "\nDomain map created"

			else
				echo -e "\nDomain map exists"

			fi

		fi
	;;

	l)	if [[ "$OPTARG" == "" ]]; then

			read -p -r "Enter fqdn: " fqdn
			echo -e "$fqdn\n" | tee -a $domfile
			eval "entld.ngx $fqdn"

		else

			echo -e "$OPTARG\n" | tee -a $domfile
			eval "entld.ngx $OPTARG"

		fi
	;;

	h)	help
	;;

	:)	help
	;;

	*) 	echo -e "\n \033[1;91m Error! Invalid option\033[0m\033[0;31m -$OPTARG\033[0m \n"
		exit
	;;
	esac

done

systemctl reload haproxy

